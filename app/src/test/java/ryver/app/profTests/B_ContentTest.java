// package csd.testclient;

// import org.junit.jupiter.api.BeforeAll;
// import org.junit.jupiter.api.Order;
// import org.junit.jupiter.api.Test;
// import org.junit.jupiter.api.TestMethodOrder;
// import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;

// import io.restassured.RestAssured;
// import io.restassured.config.JsonConfig;
// import io.restassured.path.json.config.JsonPathConfig;
// import net.minidev.json.JSONObject;

// import static org.hamcrest.Matchers.*;
// import static io.restassured.config.RedirectConfig.redirectConfig;

// import static io.restassured.RestAssured.*;

// @TestMethodOrder(OrderAnnotation.class)
// public class B_ContentTest {
//     /**
//      *  Content item info:
//         {
//             "id": (auto-generated by your api, int value),
//             "title":"The title of the advisory or news",
//             "summary":"The short summary of the content item",
//             "content": "The text of the content item",
//             "link":"https://link.to.externalcontent",
//             "approved": true (or false)
//         }
//      */

//     @BeforeAll
//     public static void initClass() {
//         RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
//         RestAssured.useRelaxedHTTPSValidation();
//         RestAssured.urlEncodingEnabled = false;
//         RestAssured.config = RestAssured.config()
//             .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
//             .redirect(redirectConfig().followRedirects(false));
//     }

//     /**
//      * Test add/approve/get content successfully
//      * @throws Exception
//      */
//     @Test
//     @Order(1)
//     public void testAddContent_Valid_ReturnJson() throws Exception{
//         // add news or advisory by analyst, need approval from manager to be visible to users
//         JSONObject requestParams = new JSONObject();
//         requestParams.put("title", "The title of the article"); 
//         requestParams.put("summary", "The summary of the article");
//         requestParams.put("content", "The content of the article");
//         requestParams.put("link",  "https://article.com/article1");

//         // any value set by analysts for "approved" would be ignored
//         // its default value is false 
//         requestParams.put("approved",  false);

//         int id = 
//         given().auth().basic(TestConstants.a1_USERNAME, TestConstants.a1_PASSWORD)
//                 .accept("*/*")
//                 .contentType("application/json")
//                 .body(requestParams.toJSONString())
//                 .post(TestConstants.contentURL)
//                 .then()
//                 .statusCode(201)
//                 .body(containsString("The title of the article"))
//                 .extract().path("id");
            
//         // view by user - not found as the article is not approved yet
//         given().auth().basic(TestConstants.u1_USERNAME, TestConstants.u1_PASSWORD)
//                 .accept("*/*")
//                 .contentType("application/json")
//                 .get(TestConstants.contentURL + "/" + id)
//                 .then()
//                 .statusCode(404);
        
//         // updated and approved by manager - note the put request
//         requestParams = new JSONObject();
//         requestParams.put("title", "The updated title of the article"); 
//         requestParams.put("summary", "The summary of the article");
//         requestParams.put("content", "The updated content of the article");
//         requestParams.put("link",  "https://article.com/article1");
//         requestParams.put("approved",  true);
//         given().auth().basic(TestConstants.m_USERNAME, TestConstants.m_PASSWORD)
//                 .accept("*/*")
//                 .contentType("application/json")
//                 .body(requestParams.toJSONString())
//                 .put(TestConstants.contentURL + "/" + id)
//                 .then()
//                 .statusCode(200)
//                 .contentType("application/json")
//                 .body(containsString("The updated title of the article"))
//                 .body("approved", equalTo(true));

//         // view by user - successful now
//         given().auth().basic(TestConstants.u1_USERNAME, TestConstants.u1_PASSWORD)
//                 .accept("*/*")
//                 .contentType("application/json")
//                 .get(TestConstants.contentURL + "/" + id)
//                 .then()
//                 .statusCode(200)
//                 .contentType("application/json")
//                 .body(containsString("The updated content of the article"));
    
//     }

//     // There can be more similar tests for create/delete/update/view, etc.
    
// }
